name: Color
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/color
    metadata:
      groupName: Color
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Get color Success","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '120'
          x-ratelimit-remaining: '114'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/color
    metadata:
      groupName: Color
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: Yellow
        type: string
        enumValues:
          - Black
          - White
          - Red
          - Blue
          - Green
          - Yellow
          - Gray
          - Pink
        exampleWasSpecified: false
        nullable: false
        custom: []
      color:
        name: color
        description: ''
        required: true
        example: Pink
        type: string
        enumValues:
          - Black
          - White
          - Red
          - Blue
          - Green
          - Yellow
          - Gray
          - Pink
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Yellow
      color: Pink
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/color/{id}'
    metadata:
      groupName: Color
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Specific category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the color.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Color] 11"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '120'
          x-ratelimit-remaining: '113'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/color/{id}'
    metadata:
      groupName: Color
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the color.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: Green
        type: string
        enumValues:
          - Black
          - White
          - Red
          - Blue
          - Green
          - Yellow
          - Gray
          - Pink
        exampleWasSpecified: false
        nullable: false
        custom: []
      color:
        name: color
        description: ''
        required: true
        example: Gray
        type: string
        enumValues:
          - Black
          - White
          - Red
          - Blue
          - Green
          - Yellow
          - Gray
          - Pink
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Green
      color: Gray
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/color/{id}'
    metadata:
      groupName: Color
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the color.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
