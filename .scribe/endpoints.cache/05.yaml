## Autogenerated by Scribe. DO NOT MODIFY.

name: Product
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'list limit the products by on client request'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Get all products successfully","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/127.0.0.1:8000\/api\/products?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/127.0.0.1:8000\/api\/products?page=1","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/127.0.0.1:8000\/api\/products?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/127.0.0.1:8000\/api\/products","per_page":4,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '120'
          x-ratelimit-remaining: '110'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'create new product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: atppjdpu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rate:
        name: rate
        description: 'Must be at least 0. Must not be greater than 10.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must not be greater than 2048 characters.'
        required: false
        example: pbbldtpszhxlzchmanomofy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Ipsum voluptas id rerum maiores voluptatem.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imported_from:
        name: imported_from
        description: 'Must not be greater than 100 characters.'
        required: true
        example: jplp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: atppjdpu
      rate: 3
      image: pbbldtpszhxlzchmanomofy
      description: 'Ipsum voluptas id rerum maiores voluptatem.'
      imported_from: jplp
      category_id: 17
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'show the specific product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Product] 15"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '120'
          x-ratelimit-remaining: '109'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'edit the specific product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: true
        example: aukutexyxstmijibvb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rate:
        name: rate
        description: 'Must be at least 0. Must not be greater than 10.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must not be greater than 2048 characters.'
        required: false
        example: ssogjtdtlqpmmmsdxw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Necessitatibus quia ea et quae.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imported_from:
        name: imported_from
        description: 'Must not be greater than 100 characters.'
        required: true
        example: vpqmnv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: aukutexyxstmijibvb
      rate: 8
      image: ssogjtdtlqpmmmsdxw
      description: 'Necessitatibus quia ea et quae.'
      imported_from: vpqmnv
      category_id: 5
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'delete the specific product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/product/category
    metadata:
      groupName: Product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":"Category not found."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '120'
          x-ratelimit-remaining: '108'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
