openapi: 3.0.3
info:
  title: 'KH Shop API'
  description: 'API for Web Application Assignment Year 4'
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/advertisements:
    get:
      summary: 'Display the listing of advertisement by take limit = 4'
      operationId: displayTheListingOfAdvertisementByTakeLimit4
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Get all advertisement successfully'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Get all advertisement successfully'
                  data:
                    type: array
                    example: []
      tags:
        - Advertisement
      security: []
    post:
      summary: 'Create a new advertisement'
      operationId: createANewAdvertisement
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertisement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tfavqktci
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Rem et assumenda sequi beatae minima voluptate.'
                  nullable: false
                order:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: perferendis
                  nullable: false
              required:
                - title
                - description
                - order
                - image
      security: []
  '/api/advertisements/{id}':
    get:
      summary: 'Get an advertisement'
      operationId: getAnAdvertisement
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Advertisement] 13'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Advertisement] 13'
      tags:
        - Advertisement
      security: []
    put:
      summary: 'Edit an advertisement'
      operationId: editAnAdvertisement
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertisement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xvsxkbeantfzbaawljk
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Neque cum nihil quia quos.'
                  nullable: false
                order:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: vel
                  nullable: false
              required:
                - title
                - description
                - order
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdvertisementsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertisement
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the advertisement.'
        example: 13
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: 'Register the user'
      operationId: registerTheUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rosozzfqlinqn
                  nullable: false
                lastName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zcoeopqdmcwyxvnptecysv
                  nullable: false
                gender:
                  type: string
                  description: ''
                  example: male
                  nullable: false
                  enum:
                    - male
                    - female
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 50 characters.'
                  example: izaiah.halvorson@example.com
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: feowhydtcijvrtbllztctrm
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ueqmsm
                  nullable: false
                password:
                  type: string
                  description: 'Must match the regex /^.*(?=.{3,})(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[\d\x])(?=.*[!$#%]).*$/. Must be at least 6 characters.'
                  example: 'H7;KHCU-N<yed3}'
                  nullable: false
              required:
                - firstName
                - lastName
                - gender
                - email
                - phoneNumber
                - country
                - city
                - password
      security: []
  /api/verify-otp:
    post:
      summary: 'Verify OTP and log the user'
      operationId: verifyOTPAndLogTheUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  description: ''
                  example: magnam
                  nullable: false
                otpToken:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: false
              required:
                - otp
                - otpToken
      security: []
  /api/login:
    post:
      summary: 'Login implementation'
      operationId: loginImplementation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kunze.keeley@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: 'LgtD-KZ9]6C}[jO'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Logout implementation'
      operationId: logoutImplementation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      security: []
  /api/me:
    get:
      summary: 'Get current user'
      operationId: getCurrentUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: null
                properties:
                  message:
                    type: string
                    example: null
      tags:
        - Authentication
      security: []
  /api/upload-profile:
    post:
      summary: ''
      operationId: postApiUploadProfile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - profile
      security: []
  /api/category:
    get:
      summary: 'List all category'
      operationId: listAllCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Get Categories Success'
                  data:
                    -
                      id: 1
                      name: Shirts
                      created_at: '2025-03-01T14:19:12.000000Z'
                      updated_at: '2025-03-01T14:19:12.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Get Categories Success'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Shirts
                        created_at: '2025-03-01T14:19:12.000000Z'
                        updated_at: '2025-03-01T14:19:12.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Shirts
                        created_at:
                          type: string
                          example: '2025-03-01T14:19:12.000000Z'
                        updated_at:
                          type: string
                          example: '2025-03-01T14:19:12.000000Z'
      tags:
        - Category
      security: []
    post:
      summary: 'Create new category'
      operationId: createNewCategory
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: Pants
                  nullable: false
                  enum:
                    - Shoes
                    - Shirts
                    - Jackets
                    - Pants
                    - Shorts
                    - 'Hoodies & Sweatshirts'
                    - 'Hats & Headwear'
                    - Activewear
              required:
                - name
      security: []
  '/api/category/{id}':
    get:
      summary: 'Get Specific category'
      operationId: getSpecificCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Get Category success'
                  data:
                    id: 1
                    name: Shirts
                    created_at: '2025-03-01T14:19:12.000000Z'
                    updated_at: '2025-03-01T14:19:12.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Get Category success'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Shirts
                      created_at:
                        type: string
                        example: '2025-03-01T14:19:12.000000Z'
                      updated_at:
                        type: string
                        example: '2025-03-01T14:19:12.000000Z'
      tags:
        - Category
      security: []
    put:
      summary: ''
      operationId: putApiCategoryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: Shorts
                  nullable: false
                  enum:
                    - Shoes
                    - Shirts
                    - Jackets
                    - Pants
                    - Shorts
                    - 'Hoodies & Sweatshirts'
                    - 'Hats & Headwear'
                    - Activewear
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiCategoryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Category
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/color:
    get:
      summary: 'List all category'
      operationId: listAllCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Get color Success'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Get color Success'
                  data:
                    type: array
                    example: []
      tags:
        - Color
      security: []
    post:
      summary: 'Create new category'
      operationId: createNewCategory
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Color
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: Yellow
                  nullable: false
                  enum:
                    - Black
                    - White
                    - Red
                    - Blue
                    - Green
                    - Yellow
                    - Gray
                    - Pink
                color:
                  type: string
                  description: ''
                  example: Pink
                  nullable: false
                  enum:
                    - Black
                    - White
                    - Red
                    - Blue
                    - Green
                    - Yellow
                    - Gray
                    - Pink
              required:
                - name
                - color
      security: []
  '/api/color/{id}':
    get:
      summary: 'Get Specific category'
      operationId: getSpecificCategory
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Color] 11'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Color] 11'
      tags:
        - Color
      security: []
    put:
      summary: ''
      operationId: putApiColorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Color
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: Green
                  nullable: false
                  enum:
                    - Black
                    - White
                    - Red
                    - Blue
                    - Green
                    - Yellow
                    - Gray
                    - Pink
                color:
                  type: string
                  description: ''
                  example: Gray
                  nullable: false
                  enum:
                    - Black
                    - White
                    - Red
                    - Blue
                    - Green
                    - Yellow
                    - Gray
                    - Pink
              required:
                - name
                - color
      security: []
    delete:
      summary: ''
      operationId: deleteApiColorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Color
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the color.'
        example: 11
        required: true
        schema:
          type: integer
  /api/products:
    get:
      summary: 'list limit the products by on client request'
      operationId: listLimitTheProductsByOnClientRequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Get all products successfully'
                  data:
                    current_page: 1
                    data: []
                    first_page_url: 'http://127.0.0.1:8000/api/products?page=1'
                    from: null
                    last_page: 1
                    last_page_url: 'http://127.0.0.1:8000/api/products?page=1'
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/products?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    next_page_url: null
                    path: 'http://127.0.0.1:8000/api/products'
                    per_page: 4
                    prev_page_url: null
                    to: null
                    total: 0
                properties:
                  message:
                    type: string
                    example: 'Get all products successfully'
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example: []
                      first_page_url:
                        type: string
                        example: 'http://127.0.0.1:8000/api/products?page=1'
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      last_page_url:
                        type: string
                        example: 'http://127.0.0.1:8000/api/products?page=1'
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://127.0.0.1:8000/api/products?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        example: null
                      path:
                        type: string
                        example: 'http://127.0.0.1:8000/api/products'
                      per_page:
                        type: integer
                        example: 4
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Product
      security: []
    post:
      summary: 'create new product'
      operationId: createNewProduct
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: atppjdpu
                  nullable: false
                rate:
                  type: integer
                  description: 'Must be at least 0. Must not be greater than 10.'
                  example: 3
                  nullable: false
                image:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: pbbldtpszhxlzchmanomofy
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Ipsum voluptas id rerum maiores voluptatem.'
                  nullable: false
                imported_from:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: jplp
                  nullable: false
                category_id:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
              required:
                - name
                - rate
                - description
                - imported_from
                - category_id
      security: []
  '/api/products/{id}':
    get:
      summary: 'show the specific product'
      operationId: showTheSpecificProduct
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Product] 15'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Product] 15'
      tags:
        - Product
      security: []
    put:
      summary: 'edit the specific product'
      operationId: editTheSpecificProduct
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: aukutexyxstmijibvb
                  nullable: false
                rate:
                  type: integer
                  description: 'Must be at least 0. Must not be greater than 10.'
                  example: 8
                  nullable: false
                image:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: ssogjtdtlqpmmmsdxw
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'Necessitatibus quia ea et quae.'
                  nullable: false
                imported_from:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: vpqmnv
                  nullable: false
                category_id:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
              required:
                - name
                - rate
                - description
                - imported_from
                - category_id
      security: []
    delete:
      summary: 'delete the specific product'
      operationId: deleteTheSpecificProduct
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 15
        required: true
        schema:
          type: integer
  /api/product/category:
    get:
      summary: ''
      operationId: getApiProductCategory
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Category not found.'
                properties:
                  error:
                    type: string
                    example: 'Category not found.'
      tags:
        - Product
      security: []
  /api/size:
    get:
      summary: 'List all category'
      operationId: listAllCategory
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Get sice Success'
                  data: []
                properties:
                  message:
                    type: string
                    example: 'Get sice Success'
                  data:
                    type: array
                    example: []
      tags:
        - Size
      security: []
    post:
      summary: 'Create new category'
      operationId: createNewCategory
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Size
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: M
                  nullable: false
                  enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
                size_number:
                  type: string
                  description: ''
                  example: XXL
                  nullable: false
                  enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
              required:
                - name
                - size_number
      security: []
  '/api/size/{id}':
    get:
      summary: 'Get Specific category'
      operationId: getSpecificCategory
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Size] 8'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Size] 8'
      tags:
        - Size
      security: []
    put:
      summary: ''
      operationId: putApiSizeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Size
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: M
                  nullable: false
                  enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
                size_number:
                  type: string
                  description: ''
                  example: L
                  nullable: false
                  enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
              required:
                - name
                - size_number
      security: []
    delete:
      summary: ''
      operationId: deleteApiSizeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Size
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the size.'
        example: 8
        required: true
        schema:
          type: integer
tags:
  -
    name: Advertisement
    description: ''
  -
    name: Authentication
    description: ''
  -
    name: Category
    description: ''
  -
    name: Color
    description: ''
  -
    name: Product
    description: ''
  -
    name: Size
    description: ''
